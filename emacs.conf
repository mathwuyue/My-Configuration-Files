;; ;; mac
;; (defun set-exec-path-from-shell-PATH ()
;;   "Set up Emacs' `exec-path' and PATH environment variable to match that used by the user's shell.

;; This is particularly useful under Mac OSX, where GUI apps are not started from a shell."
;;   (interactive)
;;   (let ((path-from-shell (replace-regexp-in-string "[ \t\n]*$" "" (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))))
;;     (setenv "PATH" path-from-shell)
;;     (setq exec-path (split-string path-from-shell path-separator))))


;; repo
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(add-to-list 'package-archives
	     '("melpha" . "http://melpa.milkbox.net/packages/"))
(package-initialize)


;; mac
(when (memq window-system '(mac ns))
  (exec-path-from-shell-copy-env "PYTHONPATH")
  (exec-path-from-shell-initialize))
; remap right click for flyspell-correct-word
(global-set-key (kbd "<mouse-3>") 'flyspell-correct-word)

;; basic settings
; ido mode
(require 'flx-ido)
(ido-mode 1)
(ido-everywhere 1)
(flx-ido-mode 1)
; disable ido faces to see flx highlights.
(setq ido-enable-flex-matching t)
(setq ido-use-faces nil)
; desktop save
(desktop-save-mode 1)
; auto revert file when it is changed on disk
(global-auto-revert-mode t)
; no toolbar
(tool-bar-mode -1)
; delete selected text when typing
(delete-selection-mode 1)


;; templates
;(add-to-list 'load-path "~/.emacs.d")
;(require 'template)
;(template-initialize)


; auto pair
;;automatically close bracket
(require 'autopair)
(autopair-global-mode 1)
(setq autopair-autowrap t)


;; helm mode
(require 'helm-config)
(helm-mode 1)
(global-set-key (kbd "M-x") 'helm-M-x)


;; iedit mode
(require 'iedit)
(define-key global-map (kbd "C-c r") 'iedit-mode)


;; defun programming environment
; general IDE
(defun my-ide ()
  ; auto-complete
  (require 'auto-complete)
  ; do default config for auto-completes
  (require 'auto-complete-config)
  (ac-config-default)
  ; start yasnippet with emacs
  (require 'yasnippet)
  (yas-global-mode 1)
  ; Fixing a key binding bug in elpy
  (define-key yas-minor-mode-map (kbd "C-c k") 'yas-expand)
  ; projectile
  (projectile-mode)
  (hs-minor-mode)
)
(add-hook 'c++-mode-hook 'my-ide)
(add-hook 'c-mode-hook 'my-ide)
(add-hook 'python-mode-hook 'my-ide)

; c/c++
(defun c-cpp-ide ()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers)
  (add-to-list 'achead:include-directories '"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/c++/4.2.1/")
  (require 'flymake-google-cpplint)
  (custom-set-variables
   '(flymake-google-cpplint-command "/home/wuyue/.emacs.d/cpplint.py"))
  (flymake-google-cpplint-load)
  ; CEDET
  ; Enable Semantic
  (semantic-mode 1)
  ; auto complete according to semantic parse results
  (add-to-list 'ac-sources 'ac-source-semantic)
  ; google-c-style
  (require 'google-c-style)
  (google-set-c-style)
  (google-make-newline-indent)
  )
; now let's call this function from c/c++ hooks
(add-hook 'c++-mode-hook 'c-cpp-ide)
(add-hook 'c-mode-hook 'c-cpp-ide)

; python mode
(elpy-enable)
; jedi
;; (require 'jedi)
;; ; hook up to autocomplete
;; ; (add-to-list 'ac-sources 'ac-source-jedi-direct)
;; (setq jedi:complete-on-dot t)
;; ; setup C-c x for jedi-direx
;; (eval-after-load "python"
;;   '(progn (define-key python-mode-map "\C-cx" 'jedi-direx:pop-to-buffer) (my-ide)))
;; (add-hook 'jedi-mode-hook 'jedi-direx:setup)
;; ; enable for python-mode
;; (add-hook 'python-mode-hook 'jedi:setup)


; haskell mode
(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)

; matlab mode
(autoload 'matlab-mode "matlab" "Matlab Editing Mode" t)
(add-to-list
 'auto-mode-alist
 '("\\.m$" . matlab-mode))
(setq matlab-indent-function t)
(setq matlab-shell-command "matlab")
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (tango-dark)))
 '(package-selected-packages
   (quote
    (latex-math-preview elpy auctex auto-complete auto-complete-auctex auto-complete-c-headers flymake-google-cpplint google-c-style haskell-mode helm iedit matlab-mode template term+ term+mux yasnippet ## autopair flx-ido)))
 '(tool-bar-mode nil))

(add-hook 'matlab-mode-hook (lambda (
					; projectile mode for matlab
				     (projectile-mode)
				     (auto-complete-mode)
				     (flymake-mode)
					; flymake for matlab-mode
				     (defun flymake-mlint-init ()
				       (flymake-simple-make-init-impl
					'flymake-create-temp-with-folder-structure nil nil
					(file-name-nondirectory buffer-file-name)
					'flymake-get-mlint-cmdline))
				     (defun flymake-get-mlint-cmdline (source base-dir)
				       (list "/Applications/MATLAB_R2014a.app/bin/maci64/mlint" (list source)))
				     
				     (push '(".+\\.m$" flymake-mlint-init flymake-simple-java-cleanup)
					   flymake-allowed-file-name-masks)
				     (add-to-list 'flymake-err-line-patterns 
						  '("^L \\([[:digit:]]+\\) (C \\([[:digit:]]+\\)\\(-[[:digit:]]+\\)?): \\(.+\\)$"
						    nil 1 2 4))
			     )))

;; paren-mode
(require 'paren)
(set-face-background 'show-paren-match-face (face-background 'default))
(set-face-foreground 'show-paren-match-face "#def")
(set-face-attribute 'show-paren-match-face nil :weight 'extra-bold)

(defadvice show-paren-function
  (after show-matching-paren-offscreen activate)
  "If the matching paren is offscreen, show the matching line in the
        echo area. Has no effect if the character before point is not of
        the syntax class ')'."
  (interactive)
  (let* ((cb (char-before (point)))
	 (matching-text (and cb
			     (char-equal (char-syntax cb) ?\) )
			     (blink-matching-open))))
    (when matching-text (message matching-text))))


;; aspell
(setq ispell-program-name "aspell")
(add-to-list 'exec-path "usr/local/Cellar/aspell/0.60.6.1/bin/aspell")


;; AUCTeX settings
; the wrapping up of the two loads make sure 
; auctex is loaded only when editing tex files.
;(add-to-list 'load-path "~/.emacs.d/auctex")
;(add-to-list 'load-path "~/.emacs.d/auctex/preview")
(eval-after-load "tex-mode" '(progn
(load "auctex.el"	nil nil t)))
					;(load "preview-latex.el" nil nil t)

; ACUTeX replaces latex-mode-hook with LaTeX-mode-hook
(add-hook 'LaTeX-mode-hook
(lambda ()
  (setq TeX-auto-save t)
  (setq TeX-PDF-mode t)
  (setq TeX-parse-self t) 
; (setq-default TeX-master nil)
  (reftex-mode t)
  (TeX-fold-mode t)
  (latex-math-mode t)
  (flyspell-mode t)
  (TeX-source-correlate-mode t)
  (setq reftex-plug-into-AUCTeX t)
; auto-complete latex : for auto-complete math symbols
  (require 'auto-complete-auctex)
; disable -dSAFER  
  (setq preview-gs-options '("-q" "-dNOPAUSE" "-DNOPLATFONTS" 
			     "-dPrinted" "-dTextAlphaBits=4" "-dGraphicsAlphaBits=4")) 
))
; preview
(setq preview-resolution-factor 0.6)
; auctex <-> skim
;; make latexmk available via C-c C-c
;; Note: SyncTeX is setup via ~/.latexmkrc (see below)
;; (add-hook 'LaTeX-mode-hook (lambda ()
;;   (push
;;     '("latexmk" "latexmk -pdf %s" TeX-run-TeX nil t
;;       :help "Run latexmk on file")
;;     TeX-command-list)))
;(add-hook 'TeX-mode-hook '(lambda () (setq TeX-command-default "latexmk")))

;; use Skim as default pdf viewer
;; Skim's displayline is used for forward search (from .tex to .pdf)
;; option -b highlights the current line; option -g opens Skim in the background  
(setq TeX-view-program-selection '((output-pdf "PDF Viewer")))
(setq TeX-view-program-list
     '(("PDF Viewer" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g %n %o %b")))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
